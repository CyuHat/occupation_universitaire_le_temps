source("C:/Users/ADMIN/Desktop/Code/R/Projet/Baleine_Bleue/Zugravu/Script/1_tagging.R", echo=TRUE)
# Libraries ----
pacman::p_load(
tidyverse,
janitor,
ellmer,
tictoc
)
# Options ----
extract_info <- function(text){
if (sample(1:10, 1) %in% c(7)){
Sys.sleep(3)
}
sysmsg <- "
Dans le cadre d'une recherche sur les occupations des universités à la suite du conflit entre Israël et la Palestine, tu es une machine avancée de traitement naturel du langage pour les chercheurs. Tu aides les chercheurs à detecter les sujets et les labels. Le sujet concerne l'occupation des universités en Suisse à la suite du conflit entre Israël et la Palestine. Indique si le texte est à propos des occupations universitaires qui ont fait suite au conflit entre Israël et la Palestine [{oui} ou {non}], la position du texte sur les occupations universitaies à savoir si l'auteur du texte semble contre les occupations des université est neutre ou est pour [{pour}, {contre} ou {neutre}], dans quel lieu ça se passe (ex. {Genève}), qui sont les acteurs (ex. {étudiants, professeurs, Netanyahou}), le ton du texte [{positif}, {negatif} ou {neutre}], les critiques adressées dans le texte (ex. {naïveté}). Voici un exemple de format.
[sujet: {oui}; position: {contre}; lieu: {Genève}; acteurs: {étudiants, professeurs}; ton: {négatif}; critique: {naïveté}; type: {chronique}]
"
sysexp <- "
Voici trois exemples:
A Bethléem, les habitants pensent plus à Gaza qu’aux célébrations de NoëlCette année, à Bethléem, il n’y a pas eu de cérémonie pour l’illumination du fameux sapin de douze mètres de haut. Ce dernier est d’ailleurs inexistant, tout comme la crèche en bois d’olivier et le marché de Noël. Il y a quelques taxis çà et là, deux policiers et des habitants attablés aux terrasses d’un café sous les arcades.
[sujet: {non}; position: {contre}; lieu: {Bethléem}; acteurs: {habitants de Bethléem}; ton: {négatif}; critique: {}; type: {article}; type: {article}]
Une vaste civilisation amazonienne dévoilée par les yeux perçants d’un laser «Claude Lévi-Strauss disait de l’Amazonie qu’elle est un Moyen Age dont on ne connaîtrait pas la Rome. D’une certaine manière, on peut dire que le lidar complète l’archéologie de terrain pour nous dévoiler en filigrane ce qu’aurait pu être cette Rome.» L’ethno-anthropologue français Philippe Descola, spécialiste des populations d’Amazonie équatorienne, ne cache pas sa satisfaction concernant les résultats de l’étude qu’il cosigne dans Science.
[sujet: {non}; position: {}; lieu: {Amazonie}; acteurs: {Philippe Descola}; ton: {neutre}; critique: {}; type: {article}]
A Columbia, au cœur de la bataille idéologique autour d’Israël On rentre dans le campus de l’université de Columbia, dans l’Upper West Side de Manhattan à New York, presque comme on franchirait le portique d’un aéroport. Un agent de sécurité s’égosille pour que les étudiants sortent à l’avance leur carte d’identification universitaire. Kippa sur la tête, un jeune parlemente avec un employé de l’université. Cet étudiant rabbinique se forme dans un séminaire théologique situé juste à côté. Il a parfois des cours à Columbia mais n’a pas le précieux sésame.
[sujet: {oui}; position: {neutre}; lieu: {Université de Columbia, Manhattan à New York}; acteurs: {agent de sécurité, étudiants}; ton: {négatif}; critique: {idéologique}; type {chronique}]
Ne répond que dans le format demandé et ne répond rien d'autre. Ne fait pas de résumé, si tu ne peux pas utiliser le modèle que je t'ai donné, indique au moin si le texte est en rapport avec le sujet.
"
chat <- chat_ollama(
model = "qwen2.5:3b",
system_prompt = str_c(sysmsg, sysexp, sep = "\n"), echo = "none"
)
chat$chat(text)
}
# Data ----
df0 <-
read_rds("MyData/df0.rds")
source("C:/Users/ADMIN/Desktop/Code/R/Projet/Baleine_Bleue/Zugravu/Script/1_tagging.R", echo=TRUE)
source("C:/Users/ADMIN/Desktop/Code/R/Projet/Baleine_Bleue/Zugravu/Script/1_tagging.R", echo=TRUE)
read_rds("MyData/full_df_repeat.rds")
read_rds("MyData/full_df_repeat.rds") %>%
length()
obj <-
read_rds("MyData/full_df_repeat.rds") %>%
length()
obj <-
read_rds("MyData/full_df_repeat.rds")
obj
obj %>% class()
obj %>% str()
obj[[1]]
tibble(
a = c(1, NA)
b = 4:5
tibble(
a = c(1, NA),
b = 4:5
)
tibble(
a = c(1, NA),
b = 4:5
) -> res
drop_na(res, a)
the_list <- list()
the_list
append(the_list, res)
append(the_list, list(res))
read_rds("MyData/df0_repeat.rds")
read_rds("MyData/df0_repeat.rds")
read_rds("MyData/df0_repeat.rds") %>%
glimpse()
read_rds("MyData/df0_repeat.rds") %>%
select(contenu) %>%
slice(1)
read_rds("MyData/df0_repeat.rds") %>%
slice(1) %>%
pull(contenu)
read_rds("MyData/df0_repeat.rds") %>%
slice(1) %>%
pull(full_text)
# Data ----
df0 <-
read_rds("MyData/df0.rds") %>%
mutate(full_text = str_c(lien, titre, description, contenu))
df0
df0 %>%
distinct()
df0 %>%
filter(str_detect(titre, "foxnews"))
df0 %>%
filter(str_detect(auteur, "Ola"))
df0 %>%
filter(str_detect(auteur, "Ola")) %>%
glimpse()
df0 %>%
filter(str_detect(auteur, "Ola")) %>%
View()
read_rds("MyData/df0_repeat.rds") %>%
filter(str_detect(auteur, "Ola"))
it <- 0
source("C:/Users/ADMIN/Desktop/Code/R/Projet/Baleine_Bleue/Zugravu/Script/1_tagging.R", echo=TRUE)
full_df
df0
df0$lien
write_rds(full_df, file = "MyData/full_df_repeat.rds")
write_rds(df0, file = "MyData/df0_repeat.rds")
# Libraries ----
pacman::p_load(
tidyverse,
janitor,
ellmer,
tictoc
)
source("C:/Users/ADMIN/Desktop/Code/R/Projet/Baleine_Bleue/Zugravu/Script/1_tagging.R", echo=TRUE)
source("C:/Users/ADMIN/Desktop/Code/R/Projet/Baleine_Bleue/Zugravu/Script/1_tagging.R", echo=TRUE)
source("C:/Users/ADMIN/Desktop/Code/R/Projet/Baleine_Bleue/Zugravu/Script/1_tagging.R", echo=TRUE)
source("C:/Users/ADMIN/Desktop/Code/R/Projet/Baleine_Bleue/Zugravu/Script/1_tagging.R", echo=TRUE)
